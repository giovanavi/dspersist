1 - Crie uma aplicação que use um banco relacional contendo uma tabela de alunos e suas disciplinas cursadas,
com suas respectivas classes Java. Cada aluno deve ter um id, cpf, matrícula, nome, email e data de nascimento.
Cada disciplina tem somente id, código e nome. Os campos id, código, matrícula e email, considerados individualmente,
não devem permitir duplicação, ou seja devem ser únicos. Existe uma associação entre alunos e disciplinas de modo que
um aluno pode cursar várias disciplinas e uma disciplinas pode ser cursada por vários alunos. As tabelas devem ser
criadas a partir dos mapeamentos das classes (entidades) através do JPA.

2- Use o padrão de persistência DAO neste trabalho usando os recursos do Spring Boot / Spring Data JPA.

3- Crie uma classe para adicionar via DAO pelo menos 6 alunos com suas respectivas disciplinas cursadas no banco de
dados. Pelo menos 50% dos alunos devem ter disciplinas cursadas.

4- Crie uma classe para inserir, atualizar e deletar alunos e disciplinas separadamente. A classe deve permitir também
adicionar disciplinas cadastradas a um determinado aluno também já cadastrado.

5- Crie e exiba o resultado de consultas usando @Query ou @NamedQuery ou consultas do Spring Data JPA baseadas apenas
em nomes de métodos (pelo menos uma consulta de cada um desses tipos) no Spring para as consultas abaixo:
a) Mostrar os nomes dos alunos e todas as suas disciplinas cursadas somente para alunos com nomes contendo determinada
   string. Ou seja: a string de busca deve ser um parâmetro nomeado da consulta. (ALUNO)
b) Dado um código de disciplina, mostrar todos os alunos que a cursaram. (DISCIPLINA)
c) Mostrar os nomes de todos os alunos com suas respectivas quantidades de disciplinas cursadas. (ALUNO)
d) Dada uma matrícula, mostrar o nome e email do aluno. (ALUNO)
e) Dada uma data, mostrar somente os alunos que nasceram depois dela. (ALUNO)



CRIAR METODOS PARA GUARDAR PESQUISAS ESPECÍFICAS
EX: a) Mostrar os nomes dos alunos e todas as suas disciplinas cursadas somente para alunos com nomes
contendo determinada string. Ou seja: a string de busca deve ser um parâmetro nomeado da consulta. (ALUNO)


INSERIR DISCIPLINAS AOS ALUNOS
TESTAR DISCIPLINAS
FAZER CLASS INSERIR ALUNOS

MUDAR TO.STRING NOS MÉTODOS DE BUSCA

AlunoCRUD
-> Save / Update (FEITO POR JPA)
-> DeleteById / DeleteByMatricula (FEITO POR JPA)
-> FindById (FEITO COM @Query)/ ByMatricula (FEITO POR JPA)
-> FindByName (FEITO POR JPA)
-> Matricular disciplinas para um aluno (FEITO)
-> Find matricula e nome BY matricula (FEITO POR NAMED QUERY)
-> Find disciplinas cursadas pelos alunos BY %nome% (FEITO POR JPA)
-> Show nome_alunos + qtd de disciplinas cursadas por cada aluno ALL (FEITO POR NATIVE QUERY)
-> Find alunos nascidos a partir de uma data (FEITO POR JPA)

DisciplinaCRUD
-> Save / Update (FEITO POR JPA)
-> DeleteById (FAZER) / DeleteByCodigo (FEITO POR JPA)
-> FindByID / ByCodigo (FEITO POR JPA)
-> FindByName (FEITO POR JPA)
-> Matricular alunos e uma disciplina (FEITO POR JPA)
-> Find alunos matriculados na disciplina ByCodigo (feito por JPA [implementar print])